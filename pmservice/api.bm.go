// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

/*
Package api is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-gen-bm v0.1.

package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

It is generated from these files:
	api.proto
*/
package api

import (
	"context"

	bm "github.com/bilibili/kratos/pkg/net/http/blademaster"
	"github.com/bilibili/kratos/pkg/net/http/blademaster/binding"
)

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathPmserviceOnThreeWayLoginWithDeviceInfoRequest = "/pmservice/OnThreeWayLoginWithDeviceInfoRequest"
var PathPmserviceOnPartentLoginRequest = "/pmservice/OnPartentLoginRequest"
var PathPmserviceOnPhoneCheckRequest = "/pmservice/OnPhoneCheckRequest"
var PathPmserviceOnPhoneSMSCodeLoginRequest = "/pmservice/OnPhoneSMSCodeLoginRequest"
var PathPmserviceOnGetUserTicketRequest = "/pmservice/OnGetUserTicketRequest"
var PathPmserviceOnUserRegisterRequest = "/pmservice/OnUserRegisterRequest"
var PathPmserviceOnGetSexRequest = "/pmservice/OnGetSexRequest"
var PathPmserviceOnRereshUserMoneyRequest = "/pmservice/OnRereshUserMoneyRequest"
var PathPmserviceOnWeXinBindQPRequest = "/pmservice/OnWeXinBindQPRequest"
var PathPmserviceOnGetMCIDByRoomSNRequest = "/pmservice/OnGetMCIDByRoomSNRequest"
var PathPmserviceOnGetLoginNameByPartnerUserIDRequest = "/pmservice/OnGetLoginNameByPartnerUserIDRequest"
var PathPmserviceOnUserLogoutRequest = "/pmservice/OnUserLogoutRequest"
var PathPmserviceOnUserOfflineRequest = "/pmservice/OnUserOfflineRequest"
var PathPmserviceOnGetQPUserInfoByParnerUserIDRequest = "/pmservice/OnGetQPUserInfoByParnerUserIDRequest"
var PathPmserviceOnMarketInfoRequest = "/pmservice/OnMarketInfoRequest"
var PathPmserviceOnAuthCodeConfirm = "/pmservice/OnAuthCodeConfirm"
var PathPmserviceOnFastRegisterRequest = "/pmservice/OnFastRegisterRequest"
var PathPmserviceOnPartnerBindRequest = "/pmservice/OnPartnerBindRequest"
var PathPmserviceOnPartnerChangeBindRequest = "/pmservice/OnPartnerChangeBindRequest"

// PmserviceBMServer is the server API for Pmservice service.
type PmserviceBMServer interface {
	OnThreeWayLoginWithDeviceInfoRequest(ctx context.Context, req *ThreeWayLoginWithDeviceReq) (resp *ThreeWayLoginWithDeviceRsp, err error)

	OnPartentLoginRequest(ctx context.Context, req *PartnerUserLoginReq) (resp *LoginResponse, err error)

	OnPhoneCheckRequest(ctx context.Context, req *PhoneCheckReq) (resp *PhoneCheckRsp, err error)

	OnPhoneSMSCodeLoginRequest(ctx context.Context, req *PhoneSMSCodeLoginReq) (resp *LoginResponse, err error)

	OnGetUserTicketRequest(ctx context.Context, req *GetUserTicketReq) (resp *GetUserTicketRsp, err error)

	OnUserRegisterRequest(ctx context.Context, req *UserRegisterReq) (resp *UserRegisterRsp, err error)

	OnGetSexRequest(ctx context.Context, req *GetUserSexReq) (resp *GetUserSexRsp, err error)

	OnRereshUserMoneyRequest(ctx context.Context, req *RefreshUserMoneyReq) (resp *RefreshUserMoneyRsp, err error)

	OnWeXinBindQPRequest(ctx context.Context, req *WeXinBindQPReq) (resp *PartnerBindRsp, err error)

	OnGetMCIDByRoomSNRequest(ctx context.Context, req *ClientGetMCIDByRoomSNReq) (resp *ClientGetMCIDByRoomSNRsp, err error)

	OnGetLoginNameByPartnerUserIDRequest(ctx context.Context, req *GetLoginNameByPartnerUserIDReq) (resp *GetLoginNameByPartnerUserIDRsp, err error)

	OnUserLogoutRequest(ctx context.Context, req *UserLogoutReq) (resp *UserLogoutRsp, err error)

	OnUserOfflineRequest(ctx context.Context, req *UserOfflineReq) (resp *UserOfflineRsp, err error)

	OnGetQPUserInfoByParnerUserIDRequest(ctx context.Context, req *GetQPUserInfoByParnerUserIDReq) (resp *GetQPUserInfoByParnerUserIDRsp, err error)

	OnMarketInfoRequest(ctx context.Context, req *MarketInfoReq) (resp *CommonResp, err error)

	OnAuthCodeConfirm(ctx context.Context, req *AuthCodeConfirm) (resp *AuthCodeConfirmRsp, err error)

	OnFastRegisterRequest(ctx context.Context, req *FastRegisterReq) (resp *FastRegisterRsp, err error)

	OnPartnerBindRequest(ctx context.Context, req *PartnerBindReq) (resp *PartnerBindRsp, err error)

	OnPartnerChangeBindRequest(ctx context.Context, req *PartnerChangeBindReq) (resp *PartnerChangeBindRsp, err error)
}

var PmserviceSvc PmserviceBMServer

func pmserviceOnThreeWayLoginWithDeviceInfoRequest(c *bm.Context) {
	p := new(ThreeWayLoginWithDeviceReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnThreeWayLoginWithDeviceInfoRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnPartentLoginRequest(c *bm.Context) {
	p := new(PartnerUserLoginReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnPartentLoginRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnPhoneCheckRequest(c *bm.Context) {
	p := new(PhoneCheckReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnPhoneCheckRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnPhoneSMSCodeLoginRequest(c *bm.Context) {
	p := new(PhoneSMSCodeLoginReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnPhoneSMSCodeLoginRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnGetUserTicketRequest(c *bm.Context) {
	p := new(GetUserTicketReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnGetUserTicketRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnUserRegisterRequest(c *bm.Context) {
	p := new(UserRegisterReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnUserRegisterRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnGetSexRequest(c *bm.Context) {
	p := new(GetUserSexReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnGetSexRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnRereshUserMoneyRequest(c *bm.Context) {
	p := new(RefreshUserMoneyReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnRereshUserMoneyRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnWeXinBindQPRequest(c *bm.Context) {
	p := new(WeXinBindQPReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnWeXinBindQPRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnGetMCIDByRoomSNRequest(c *bm.Context) {
	p := new(ClientGetMCIDByRoomSNReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnGetMCIDByRoomSNRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnGetLoginNameByPartnerUserIDRequest(c *bm.Context) {
	p := new(GetLoginNameByPartnerUserIDReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnGetLoginNameByPartnerUserIDRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnUserLogoutRequest(c *bm.Context) {
	p := new(UserLogoutReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnUserLogoutRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnUserOfflineRequest(c *bm.Context) {
	p := new(UserOfflineReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnUserOfflineRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnGetQPUserInfoByParnerUserIDRequest(c *bm.Context) {
	p := new(GetQPUserInfoByParnerUserIDReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnGetQPUserInfoByParnerUserIDRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnMarketInfoRequest(c *bm.Context) {
	p := new(MarketInfoReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnMarketInfoRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnAuthCodeConfirm(c *bm.Context) {
	p := new(AuthCodeConfirm)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnAuthCodeConfirm(c, p)
	c.JSON(resp, err)
}

func pmserviceOnFastRegisterRequest(c *bm.Context) {
	p := new(FastRegisterReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnFastRegisterRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnPartnerBindRequest(c *bm.Context) {
	p := new(PartnerBindReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnPartnerBindRequest(c, p)
	c.JSON(resp, err)
}

func pmserviceOnPartnerChangeBindRequest(c *bm.Context) {
	p := new(PartnerChangeBindReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := PmserviceSvc.OnPartnerChangeBindRequest(c, p)
	c.JSON(resp, err)
}

// RegisterPmserviceBMServer Register the blademaster route
func RegisterPmserviceBMServer(e *bm.Engine, server PmserviceBMServer) {
	PmserviceSvc = server
	e.POST("/pmservice/OnThreeWayLoginWithDeviceInfoRequest", pmserviceOnThreeWayLoginWithDeviceInfoRequest)
	e.POST("/pmservice/OnPartentLoginRequest", pmserviceOnPartentLoginRequest)
	e.POST("/pmservice/OnPhoneCheckRequest", pmserviceOnPhoneCheckRequest)
	e.POST("/pmservice/OnPhoneSMSCodeLoginRequest", pmserviceOnPhoneSMSCodeLoginRequest)
	e.POST("/pmservice/OnGetUserTicketRequest", pmserviceOnGetUserTicketRequest)
	e.POST("/pmservice/OnUserRegisterRequest", pmserviceOnUserRegisterRequest)
	e.POST("/pmservice/OnGetSexRequest", pmserviceOnGetSexRequest)
	e.POST("/pmservice/OnRereshUserMoneyRequest", pmserviceOnRereshUserMoneyRequest)
	e.POST("/pmservice/OnWeXinBindQPRequest", pmserviceOnWeXinBindQPRequest)
	e.POST("/pmservice/OnGetMCIDByRoomSNRequest", pmserviceOnGetMCIDByRoomSNRequest)
	e.POST("/pmservice/OnGetLoginNameByPartnerUserIDRequest", pmserviceOnGetLoginNameByPartnerUserIDRequest)
	e.POST("/pmservice/OnUserLogoutRequest", pmserviceOnUserLogoutRequest)
	e.POST("/pmservice/OnUserOfflineRequest", pmserviceOnUserOfflineRequest)
	e.POST("/pmservice/OnGetQPUserInfoByParnerUserIDRequest", pmserviceOnGetQPUserInfoByParnerUserIDRequest)
	e.POST("/pmservice/OnMarketInfoRequest", pmserviceOnMarketInfoRequest)
	e.POST("/pmservice/OnAuthCodeConfirm", pmserviceOnAuthCodeConfirm)
	e.POST("/pmservice/OnFastRegisterRequest", pmserviceOnFastRegisterRequest)
	e.POST("/pmservice/OnPartnerBindRequest", pmserviceOnPartnerBindRequest)
	e.POST("/pmservice/OnPartnerChangeBindRequest", pmserviceOnPartnerChangeBindRequest)
}
