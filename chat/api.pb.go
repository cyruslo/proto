// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 系统消息请求
type SysMessagesReq struct {
	Words                *string  `protobuf:"bytes,1,req,name=words" json:"words,omitempty"`
	MsgType              *int32   `protobuf:"varint,2,req,name=msgType" json:"msgType,omitempty"`
	GameID               *int32   `protobuf:"varint,3,req,name=gameID" json:"gameID,omitempty"`
	ContentType          *int32   `protobuf:"varint,4,req,name=contentType" json:"contentType,omitempty"`
	Delaysec             *int32   `protobuf:"varint,5,req,name=delaysec" json:"delaysec,omitempty"`
	PtypeID              *int32   `protobuf:"varint,6,req,name=ptypeID" json:"ptypeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SysMessagesReq) Reset()         { *m = SysMessagesReq{} }
func (m *SysMessagesReq) String() string { return proto.CompactTextString(m) }
func (*SysMessagesReq) ProtoMessage()    {}
func (*SysMessagesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}
func (m *SysMessagesReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SysMessagesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SysMessagesReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SysMessagesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SysMessagesReq.Merge(m, src)
}
func (m *SysMessagesReq) XXX_Size() int {
	return m.Size()
}
func (m *SysMessagesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SysMessagesReq.DiscardUnknown(m)
}

var xxx_messageInfo_SysMessagesReq proto.InternalMessageInfo

type SysMessagesResp struct {
	Result               *int32   `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SysMessagesResp) Reset()         { *m = SysMessagesResp{} }
func (m *SysMessagesResp) String() string { return proto.CompactTextString(m) }
func (*SysMessagesResp) ProtoMessage()    {}
func (*SysMessagesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}
func (m *SysMessagesResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SysMessagesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SysMessagesResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SysMessagesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SysMessagesResp.Merge(m, src)
}
func (m *SysMessagesResp) XXX_Size() int {
	return m.Size()
}
func (m *SysMessagesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SysMessagesResp.DiscardUnknown(m)
}

var xxx_messageInfo_SysMessagesResp proto.InternalMessageInfo

type MarqueePushMsg struct {
	Msg                  *string  `protobuf:"bytes,1,opt,name=Msg" json:"Msg,omitempty"`
	ContentType          *int32   `protobuf:"varint,2,opt,name=ContentType" json:"ContentType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarqueePushMsg) Reset()         { *m = MarqueePushMsg{} }
func (m *MarqueePushMsg) String() string { return proto.CompactTextString(m) }
func (*MarqueePushMsg) ProtoMessage()    {}
func (*MarqueePushMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}
func (m *MarqueePushMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MarqueePushMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MarqueePushMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MarqueePushMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarqueePushMsg.Merge(m, src)
}
func (m *MarqueePushMsg) XXX_Size() int {
	return m.Size()
}
func (m *MarqueePushMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_MarqueePushMsg.DiscardUnknown(m)
}

var xxx_messageInfo_MarqueePushMsg proto.InternalMessageInfo

// 聊天
type HallChatMsgReq struct {
	UserID               *int32   `protobuf:"varint,1,req,name=userID" json:"userID,omitempty"`
	ChatMsg              *string  `protobuf:"bytes,2,req,name=chatMsg" json:"chatMsg,omitempty"`
	MsgType              *int32   `protobuf:"varint,3,req,name=msgType" json:"msgType,omitempty"`
	PtypeID              *int32   `protobuf:"varint,4,req,name=ptypeID" json:"ptypeID,omitempty"`
	GameID               *int32   `protobuf:"varint,5,opt,name=gameID" json:"gameID,omitempty"`
	Name                 *string  `protobuf:"bytes,6,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HallChatMsgReq) Reset()         { *m = HallChatMsgReq{} }
func (m *HallChatMsgReq) String() string { return proto.CompactTextString(m) }
func (*HallChatMsgReq) ProtoMessage()    {}
func (*HallChatMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}
func (m *HallChatMsgReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HallChatMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HallChatMsgReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HallChatMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HallChatMsgReq.Merge(m, src)
}
func (m *HallChatMsgReq) XXX_Size() int {
	return m.Size()
}
func (m *HallChatMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HallChatMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_HallChatMsgReq proto.InternalMessageInfo

type HallChatMsgResp struct {
	Result               *int32   `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HallChatMsgResp) Reset()         { *m = HallChatMsgResp{} }
func (m *HallChatMsgResp) String() string { return proto.CompactTextString(m) }
func (*HallChatMsgResp) ProtoMessage()    {}
func (*HallChatMsgResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}
func (m *HallChatMsgResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HallChatMsgResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HallChatMsgResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HallChatMsgResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HallChatMsgResp.Merge(m, src)
}
func (m *HallChatMsgResp) XXX_Size() int {
	return m.Size()
}
func (m *HallChatMsgResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HallChatMsgResp.DiscardUnknown(m)
}

var xxx_messageInfo_HallChatMsgResp proto.InternalMessageInfo

type ChatPushMsg struct {
	Msg                  *string  `protobuf:"bytes,1,opt,name=Msg" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatPushMsg) Reset()         { *m = ChatPushMsg{} }
func (m *ChatPushMsg) String() string { return proto.CompactTextString(m) }
func (*ChatPushMsg) ProtoMessage()    {}
func (*ChatPushMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}
func (m *ChatPushMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChatPushMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChatPushMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChatPushMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatPushMsg.Merge(m, src)
}
func (m *ChatPushMsg) XXX_Size() int {
	return m.Size()
}
func (m *ChatPushMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatPushMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ChatPushMsg proto.InternalMessageInfo

type GetChatConsumeRep struct {
	UserID               *int32   `protobuf:"varint,1,req,name=userID" json:"userID,omitempty"`
	ConsumeType          *int32   `protobuf:"varint,2,req,name=consumeType" json:"consumeType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChatConsumeRep) Reset()         { *m = GetChatConsumeRep{} }
func (m *GetChatConsumeRep) String() string { return proto.CompactTextString(m) }
func (*GetChatConsumeRep) ProtoMessage()    {}
func (*GetChatConsumeRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}
func (m *GetChatConsumeRep) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetChatConsumeRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetChatConsumeRep.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetChatConsumeRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChatConsumeRep.Merge(m, src)
}
func (m *GetChatConsumeRep) XXX_Size() int {
	return m.Size()
}
func (m *GetChatConsumeRep) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChatConsumeRep.DiscardUnknown(m)
}

var xxx_messageInfo_GetChatConsumeRep proto.InternalMessageInfo

type GetChatConsumeResp struct {
	Result               *int32   `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	RetMsg               *string  `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ConsumeType          *int32   `protobuf:"varint,3,opt,name=consumeType" json:"consumeType,omitempty"`
	ConsumeNum           *int32   `protobuf:"varint,4,opt,name=consumeNum" json:"consumeNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChatConsumeResp) Reset()         { *m = GetChatConsumeResp{} }
func (m *GetChatConsumeResp) String() string { return proto.CompactTextString(m) }
func (*GetChatConsumeResp) ProtoMessage()    {}
func (*GetChatConsumeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}
func (m *GetChatConsumeResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetChatConsumeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetChatConsumeResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetChatConsumeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChatConsumeResp.Merge(m, src)
}
func (m *GetChatConsumeResp) XXX_Size() int {
	return m.Size()
}
func (m *GetChatConsumeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChatConsumeResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChatConsumeResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SysMessagesReq)(nil), "chat.service.v1.SysMessagesReq")
	proto.RegisterType((*SysMessagesResp)(nil), "chat.service.v1.SysMessagesResp")
	proto.RegisterType((*MarqueePushMsg)(nil), "chat.service.v1.MarqueePushMsg")
	proto.RegisterType((*HallChatMsgReq)(nil), "chat.service.v1.HallChatMsgReq")
	proto.RegisterType((*HallChatMsgResp)(nil), "chat.service.v1.HallChatMsgResp")
	proto.RegisterType((*ChatPushMsg)(nil), "chat.service.v1.ChatPushMsg")
	proto.RegisterType((*GetChatConsumeRep)(nil), "chat.service.v1.GetChatConsumeRep")
	proto.RegisterType((*GetChatConsumeResp)(nil), "chat.service.v1.GetChatConsumeResp")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 549 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x41, 0x6e, 0x13, 0x3d,
	0x18, 0xed, 0x4c, 0x92, 0xfe, 0x7f, 0xbe, 0x48, 0x29, 0x58, 0xa8, 0x4c, 0x47, 0xd5, 0x24, 0x32,
	0x9b, 0xb2, 0x60, 0x22, 0x38, 0x02, 0x89, 0x04, 0x5d, 0x0c, 0x42, 0x53, 0x56, 0xec, 0xdc, 0xa9,
	0x71, 0x46, 0xca, 0x8c, 0x9d, 0xb1, 0xa7, 0x28, 0x0b, 0x36, 0x2c, 0xb8, 0x00, 0x1b, 0xd6, 0x9c,
	0x80, 0x63, 0x74, 0x89, 0xc4, 0x05, 0x20, 0x70, 0x02, 0x4e, 0x80, 0x6c, 0x4f, 0x91, 0x27, 0x4d,
	0xca, 0xce, 0xef, 0xf3, 0xb3, 0xdf, 0xfb, 0xde, 0x67, 0x43, 0x9f, 0x88, 0x3c, 0x16, 0x15, 0x57,
	0x1c, 0x1d, 0x64, 0x73, 0xa2, 0x62, 0x49, 0xab, 0xcb, 0x3c, 0xa3, 0xf1, 0xe5, 0xe3, 0xf0, 0x11,
	0xcb, 0xd5, 0xbc, 0x3e, 0x8f, 0x33, 0x5e, 0x4c, 0x18, 0x67, 0x7c, 0x62, 0x78, 0xe7, 0xf5, 0x1b,
	0x83, 0x0c, 0x30, 0x2b, 0x7b, 0x3e, 0x3c, 0x66, 0x9c, 0xb3, 0x05, 0x9d, 0x10, 0x91, 0x4f, 0x48,
	0x59, 0x72, 0x45, 0x54, 0xce, 0x4b, 0x69, 0x77, 0xf1, 0x17, 0x0f, 0x86, 0x67, 0x2b, 0x99, 0x50,
	0x29, 0x09, 0xa3, 0x32, 0xa5, 0x4b, 0x74, 0x0f, 0x7a, 0x6f, 0x79, 0x75, 0x21, 0x03, 0x6f, 0xec,
	0x9f, 0xf4, 0x53, 0x0b, 0x50, 0x00, 0xff, 0x15, 0x92, 0xbd, 0x5a, 0x09, 0x1a, 0xf8, 0x63, 0xff,
	0xa4, 0x97, 0x5e, 0x43, 0x74, 0x08, 0xfb, 0x8c, 0x14, 0xf4, 0x74, 0x16, 0x74, 0xcc, 0x46, 0x83,
	0xd0, 0x18, 0x06, 0x19, 0x2f, 0x15, 0x2d, 0x95, 0x39, 0xd5, 0x35, 0x9b, 0x6e, 0x09, 0x85, 0xf0,
	0xff, 0x05, 0x5d, 0x90, 0x95, 0xa4, 0x59, 0xd0, 0x33, 0xdb, 0x7f, 0xb1, 0xd6, 0x13, 0x6a, 0x25,
	0xf4, 0xb5, 0xfb, 0x56, 0xaf, 0x81, 0xf8, 0x21, 0x1c, 0xb4, 0x1c, 0x4b, 0xa1, 0x2d, 0x54, 0x54,
	0xd6, 0x0b, 0x15, 0x78, 0x63, 0x4f, 0x5b, 0xb0, 0x08, 0xcf, 0x60, 0x98, 0x90, 0x6a, 0x59, 0x53,
	0xfa, 0xb2, 0x96, 0xf3, 0x44, 0x32, 0x74, 0x07, 0x3a, 0x89, 0x64, 0x86, 0xd6, 0x4f, 0xf5, 0x52,
	0xdb, 0x9c, 0x3a, 0x36, 0x7d, 0x73, 0x81, 0x5b, 0xc2, 0x9f, 0x3d, 0x18, 0x3e, 0x27, 0x8b, 0xc5,
	0x74, 0x4e, 0x54, 0x22, 0x99, 0xce, 0xe8, 0x10, 0xf6, 0x6b, 0x49, 0xab, 0xd3, 0x99, 0x09, 0xa9,
	0x97, 0x36, 0x48, 0xbb, 0xce, 0x2c, 0xcb, 0xa4, 0xd4, 0x4f, 0xaf, 0xa1, 0x9b, 0x5f, 0xa7, 0x9d,
	0x9f, 0xd3, 0x69, 0xb7, 0xd5, 0xa9, 0x93, 0x6c, 0xcf, 0xb6, 0xd5, 0x24, 0x8b, 0xa0, 0x5b, 0x92,
	0x82, 0x9a, 0x60, 0xfa, 0xa9, 0x59, 0xeb, 0x54, 0x5a, 0x1e, 0x6f, 0x49, 0x65, 0x04, 0x03, 0x4d,
	0xdb, 0x19, 0x09, 0x4e, 0xe0, 0xee, 0x33, 0xaa, 0x34, 0x67, 0xca, 0x4b, 0x59, 0x17, 0x34, 0xa5,
	0x62, 0x67, 0xcb, 0x76, 0xcc, 0x9a, 0xe5, 0x3c, 0x0e, 0xb7, 0x84, 0x3f, 0x78, 0x80, 0x36, 0xef,
	0xdb, 0x6d, 0xcf, 0xd6, 0x9b, 0x08, 0xb5, 0xa5, 0x06, 0x6d, 0x0a, 0x75, 0xec, 0xa0, 0x9c, 0x12,
	0x8a, 0x00, 0x1a, 0xf8, 0xa2, 0x2e, 0x82, 0xae, 0x21, 0x38, 0x95, 0x27, 0xbf, 0x7d, 0x18, 0xe8,
	0x79, 0x9c, 0xd9, 0xcf, 0x84, 0x96, 0x30, 0x70, 0x5e, 0x12, 0x1a, 0xc5, 0x1b, 0x5f, 0x2d, 0x6e,
	0xff, 0x8c, 0x70, 0x7c, 0x3b, 0x41, 0x0a, 0x3c, 0x7a, 0xff, 0xed, 0xd7, 0x47, 0xff, 0x08, 0xdf,
	0x77, 0x64, 0x26, 0xae, 0xc6, 0x12, 0x06, 0xce, 0x98, 0xb6, 0x48, 0xb6, 0x1f, 0xda, 0x16, 0xc9,
	0x8d, 0x29, 0x6f, 0x97, 0x74, 0x35, 0xde, 0xc1, 0xb0, 0x9d, 0x3e, 0xc2, 0x37, 0x2e, 0xbd, 0x31,
	0xee, 0xf0, 0xc1, 0x3f, 0x39, 0x52, 0x60, 0x6c, 0xb4, 0x8f, 0x71, 0xe8, 0x6a, 0xb7, 0x79, 0x4f,
	0x8f, 0xae, 0x7e, 0x44, 0x7b, 0x57, 0xeb, 0xc8, 0xfb, 0xba, 0x8e, 0xbc, 0xef, 0xeb, 0xc8, 0xfb,
	0xf4, 0x33, 0xda, 0x7b, 0xdd, 0x21, 0x22, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x09, 0x9a,
	0x2b, 0xe6, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	// 系统消息
	SysMessages(ctx context.Context, in *SysMessagesReq, opts ...grpc.CallOption) (*SysMessagesResp, error)
	// 聊天
	HallChatMsg(ctx context.Context, in *HallChatMsgReq, opts ...grpc.CallOption) (*HallChatMsgResp, error)
	// 查询聊天消耗
	GetChatConsume(ctx context.Context, in *GetChatConsumeRep, opts ...grpc.CallOption) (*GetChatConsumeResp, error)
}

type chatServiceClient struct {
	cc *grpc.ClientConn
}

func NewChatServiceClient(cc *grpc.ClientConn) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) SysMessages(ctx context.Context, in *SysMessagesReq, opts ...grpc.CallOption) (*SysMessagesResp, error) {
	out := new(SysMessagesResp)
	err := c.cc.Invoke(ctx, "/chat.service.v1.chatService/SysMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) HallChatMsg(ctx context.Context, in *HallChatMsgReq, opts ...grpc.CallOption) (*HallChatMsgResp, error) {
	out := new(HallChatMsgResp)
	err := c.cc.Invoke(ctx, "/chat.service.v1.chatService/HallChatMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) GetChatConsume(ctx context.Context, in *GetChatConsumeRep, opts ...grpc.CallOption) (*GetChatConsumeResp, error) {
	out := new(GetChatConsumeResp)
	err := c.cc.Invoke(ctx, "/chat.service.v1.chatService/GetChatConsume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	// 系统消息
	SysMessages(context.Context, *SysMessagesReq) (*SysMessagesResp, error)
	// 聊天
	HallChatMsg(context.Context, *HallChatMsgReq) (*HallChatMsgResp, error)
	// 查询聊天消耗
	GetChatConsume(context.Context, *GetChatConsumeRep) (*GetChatConsumeResp, error)
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) SysMessages(ctx context.Context, req *SysMessagesReq) (*SysMessagesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysMessages not implemented")
}
func (*UnimplementedChatServiceServer) HallChatMsg(ctx context.Context, req *HallChatMsgReq) (*HallChatMsgResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HallChatMsg not implemented")
}
func (*UnimplementedChatServiceServer) GetChatConsume(ctx context.Context, req *GetChatConsumeRep) (*GetChatConsumeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChatConsume not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_SysMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysMessagesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SysMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.service.v1.chatService/SysMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SysMessages(ctx, req.(*SysMessagesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_HallChatMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HallChatMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).HallChatMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.service.v1.chatService/HallChatMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).HallChatMsg(ctx, req.(*HallChatMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_GetChatConsume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChatConsumeRep)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).GetChatConsume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.service.v1.chatService/GetChatConsume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).GetChatConsume(ctx, req.(*GetChatConsumeRep))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.service.v1.chatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SysMessages",
			Handler:    _ChatService_SysMessages_Handler,
		},
		{
			MethodName: "HallChatMsg",
			Handler:    _ChatService_HallChatMsg_Handler,
		},
		{
			MethodName: "GetChatConsume",
			Handler:    _ChatService_GetChatConsume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func (m *SysMessagesReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SysMessagesReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SysMessagesReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PtypeID == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintApi(dAtA, i, uint64(*m.PtypeID))
		i--
		dAtA[i] = 0x30
	}
	if m.Delaysec == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintApi(dAtA, i, uint64(*m.Delaysec))
		i--
		dAtA[i] = 0x28
	}
	if m.ContentType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintApi(dAtA, i, uint64(*m.ContentType))
		i--
		dAtA[i] = 0x20
	}
	if m.GameID == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintApi(dAtA, i, uint64(*m.GameID))
		i--
		dAtA[i] = 0x18
	}
	if m.MsgType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintApi(dAtA, i, uint64(*m.MsgType))
		i--
		dAtA[i] = 0x10
	}
	if m.Words == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.Words)
		copy(dAtA[i:], *m.Words)
		i = encodeVarintApi(dAtA, i, uint64(len(*m.Words)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SysMessagesResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SysMessagesResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SysMessagesResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		i = encodeVarintApi(dAtA, i, uint64(*m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MarqueePushMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MarqueePushMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MarqueePushMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ContentType != nil {
		i = encodeVarintApi(dAtA, i, uint64(*m.ContentType))
		i--
		dAtA[i] = 0x10
	}
	if m.Msg != nil {
		i -= len(*m.Msg)
		copy(dAtA[i:], *m.Msg)
		i = encodeVarintApi(dAtA, i, uint64(len(*m.Msg)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HallChatMsgReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HallChatMsgReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HallChatMsgReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Name == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintApi(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x32
	}
	if m.GameID != nil {
		i = encodeVarintApi(dAtA, i, uint64(*m.GameID))
		i--
		dAtA[i] = 0x28
	}
	if m.PtypeID == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintApi(dAtA, i, uint64(*m.PtypeID))
		i--
		dAtA[i] = 0x20
	}
	if m.MsgType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintApi(dAtA, i, uint64(*m.MsgType))
		i--
		dAtA[i] = 0x18
	}
	if m.ChatMsg == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.ChatMsg)
		copy(dAtA[i:], *m.ChatMsg)
		i = encodeVarintApi(dAtA, i, uint64(len(*m.ChatMsg)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserID == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintApi(dAtA, i, uint64(*m.UserID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *HallChatMsgResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HallChatMsgResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HallChatMsgResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		i = encodeVarintApi(dAtA, i, uint64(*m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ChatPushMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChatPushMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChatPushMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Msg != nil {
		i -= len(*m.Msg)
		copy(dAtA[i:], *m.Msg)
		i = encodeVarintApi(dAtA, i, uint64(len(*m.Msg)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetChatConsumeRep) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetChatConsumeRep) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetChatConsumeRep) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ConsumeType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintApi(dAtA, i, uint64(*m.ConsumeType))
		i--
		dAtA[i] = 0x10
	}
	if m.UserID == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintApi(dAtA, i, uint64(*m.UserID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetChatConsumeResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetChatConsumeResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetChatConsumeResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ConsumeNum != nil {
		i = encodeVarintApi(dAtA, i, uint64(*m.ConsumeNum))
		i--
		dAtA[i] = 0x20
	}
	if m.ConsumeType != nil {
		i = encodeVarintApi(dAtA, i, uint64(*m.ConsumeType))
		i--
		dAtA[i] = 0x18
	}
	if m.RetMsg != nil {
		i -= len(*m.RetMsg)
		copy(dAtA[i:], *m.RetMsg)
		i = encodeVarintApi(dAtA, i, uint64(len(*m.RetMsg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Result != nil {
		i = encodeVarintApi(dAtA, i, uint64(*m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SysMessagesReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Words != nil {
		l = len(*m.Words)
		n += 1 + l + sovApi(uint64(l))
	}
	if m.MsgType != nil {
		n += 1 + sovApi(uint64(*m.MsgType))
	}
	if m.GameID != nil {
		n += 1 + sovApi(uint64(*m.GameID))
	}
	if m.ContentType != nil {
		n += 1 + sovApi(uint64(*m.ContentType))
	}
	if m.Delaysec != nil {
		n += 1 + sovApi(uint64(*m.Delaysec))
	}
	if m.PtypeID != nil {
		n += 1 + sovApi(uint64(*m.PtypeID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SysMessagesResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovApi(uint64(*m.Result))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MarqueePushMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ContentType != nil {
		n += 1 + sovApi(uint64(*m.ContentType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HallChatMsgReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserID != nil {
		n += 1 + sovApi(uint64(*m.UserID))
	}
	if m.ChatMsg != nil {
		l = len(*m.ChatMsg)
		n += 1 + l + sovApi(uint64(l))
	}
	if m.MsgType != nil {
		n += 1 + sovApi(uint64(*m.MsgType))
	}
	if m.PtypeID != nil {
		n += 1 + sovApi(uint64(*m.PtypeID))
	}
	if m.GameID != nil {
		n += 1 + sovApi(uint64(*m.GameID))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HallChatMsgResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovApi(uint64(*m.Result))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChatPushMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetChatConsumeRep) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserID != nil {
		n += 1 + sovApi(uint64(*m.UserID))
	}
	if m.ConsumeType != nil {
		n += 1 + sovApi(uint64(*m.ConsumeType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetChatConsumeResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovApi(uint64(*m.Result))
	}
	if m.RetMsg != nil {
		l = len(*m.RetMsg)
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ConsumeType != nil {
		n += 1 + sovApi(uint64(*m.ConsumeType))
	}
	if m.ConsumeNum != nil {
		n += 1 + sovApi(uint64(*m.ConsumeNum))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SysMessagesReq) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SysMessagesReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SysMessagesReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Words", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Words = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MsgType = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameID", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GameID = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ContentType = &v
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Delaysec", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Delaysec = &v
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PtypeID", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PtypeID = &v
			hasFields[0] |= uint64(0x00000020)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SysMessagesResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SysMessagesResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SysMessagesResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MarqueePushMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MarqueePushMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MarqueePushMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ContentType = &v
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HallChatMsgReq) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HallChatMsgReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HallChatMsgReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UserID = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ChatMsg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MsgType = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PtypeID", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PtypeID = &v
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameID", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GameID = &v
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HallChatMsgResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HallChatMsgResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HallChatMsgResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChatPushMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChatPushMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChatPushMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetChatConsumeRep) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetChatConsumeRep: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetChatConsumeRep: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UserID = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumeType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConsumeType = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetChatConsumeResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetChatConsumeResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetChatConsumeResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RetMsg = &s
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumeType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConsumeType = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumeNum", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConsumeNum = &v
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
