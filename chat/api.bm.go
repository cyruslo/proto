// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

/*
Package api is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-gen-bm v0.1.

package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

It is generated from these files:
	api.proto
*/
package api

import (
	"context"

	bm "github.com/bilibili/kratos/pkg/net/http/blademaster"
	"github.com/bilibili/kratos/pkg/net/http/blademaster/binding"
)

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathChatServiceSysMessages = "chatService/SysMessages"
var PathChatServiceHallChatMsg = "chatService/HallChatMsg"
var PathChatServiceGetChatConsume = "chatService/GetChatConsume"

// ChatServiceBMServer is the server API for ChatService service.
type ChatServiceBMServer interface {
	// 系统消息
	SysMessages(ctx context.Context, req *SysMessagesReq) (resp *SysMessagesResp, err error)

	// 聊天
	HallChatMsg(ctx context.Context, req *HallChatMsgReq) (resp *HallChatMsgResp, err error)

	// 查询聊天消耗
	GetChatConsume(ctx context.Context, req *GetChatConsumeRep) (resp *GetChatConsumeResp, err error)
}

var ChatServiceSvc ChatServiceBMServer

func chatServiceSysMessages(c *bm.Context) {
	p := new(SysMessagesReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := ChatServiceSvc.SysMessages(c, p)
	c.JSON(resp, err)
}

func chatServiceHallChatMsg(c *bm.Context) {
	p := new(HallChatMsgReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := ChatServiceSvc.HallChatMsg(c, p)
	c.JSON(resp, err)
}

func chatServiceGetChatConsume(c *bm.Context) {
	p := new(GetChatConsumeRep)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := ChatServiceSvc.GetChatConsume(c, p)
	c.JSON(resp, err)
}

// RegisterChatServiceBMServer Register the blademaster route
func RegisterChatServiceBMServer(e *bm.Engine, server ChatServiceBMServer) {
	ChatServiceSvc = server
	e.POST("chatService/SysMessages", chatServiceSysMessages)
	e.POST("chatService/HallChatMsg", chatServiceHallChatMsg)
	e.POST("chatService/GetChatConsume", chatServiceGetChatConsume)
}
