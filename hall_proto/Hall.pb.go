// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Hall.proto

/*
Package HallProto is a generated protocol buffer package.

It is generated from these files:
	Hall.proto

It has these top-level messages:
	ShutdownService
	Ping
	FreshMoney
	BplUpdateJackpotPool
	BplInsertJackpotRecord
	Chat
	Message
	HttpResult
	RpcMessage
	RpcResp
	ServerInfo
	ServerUpdate
	Mail
	AwardGoldUpdateRep
	AwardGoldUpdateRsp
	TriggerArenaAwardGold
	TriggerArenaAwardGoldRep
	TriggerArenaAwardGoldRsp
	AwardGoldPoolTriggerLog
	AddArenaAwardGoldPoolNotify
	TransferToCelint
	TurntableRecordRsq
*/
package HallProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HallMsgCode int32

const (
	HallMsgCode_HMC_Invalid                     HallMsgCode = 0
	HallMsgCode_HMC_CHat                        HallMsgCode = 1
	HallMsgCode_HMC_ServerUpdate                HallMsgCode = 2
	HallMsgCode_HMC_MailPublish                 HallMsgCode = 7
	HallMsgCode_HMC_AwardGoldUpdate             HallMsgCode = 8
	HallMsgCode_HMC_TriggerArenaAwardGold       HallMsgCode = 9
	HallMsgCode_HMC_AwardGoldPoolTriggerLog     HallMsgCode = 10
	HallMsgCode_HMC_FreshMoney                  HallMsgCode = 11
	HallMsgCode_HMC_BplUpdateJackpotPool        HallMsgCode = 12
	HallMsgCode_HMC_BplInsertJackpotRecord      HallMsgCode = 13
	HallMsgCode_HMC_AddArenaAwardGoldPoolNotify HallMsgCode = 14
	HallMsgCode_HMC_Ping                        HallMsgCode = 15
	HallMsgCode_HMC_ShutdownService             HallMsgCode = 16
	HallMsgCode_HMC_TransferToCelint            HallMsgCode = 17
	HallMsgCode_HMC_TurntableRecord             HallMsgCode = 18
)

var HallMsgCode_name = map[int32]string{
	0:  "HMC_Invalid",
	1:  "HMC_CHat",
	2:  "HMC_ServerUpdate",
	7:  "HMC_MailPublish",
	8:  "HMC_AwardGoldUpdate",
	9:  "HMC_TriggerArenaAwardGold",
	10: "HMC_AwardGoldPoolTriggerLog",
	11: "HMC_FreshMoney",
	12: "HMC_BplUpdateJackpotPool",
	13: "HMC_BplInsertJackpotRecord",
	14: "HMC_AddArenaAwardGoldPoolNotify",
	15: "HMC_Ping",
	16: "HMC_ShutdownService",
	17: "HMC_TransferToCelint",
	18: "HMC_TurntableRecord",
}
var HallMsgCode_value = map[string]int32{
	"HMC_Invalid":                     0,
	"HMC_CHat":                        1,
	"HMC_ServerUpdate":                2,
	"HMC_MailPublish":                 7,
	"HMC_AwardGoldUpdate":             8,
	"HMC_TriggerArenaAwardGold":       9,
	"HMC_AwardGoldPoolTriggerLog":     10,
	"HMC_FreshMoney":                  11,
	"HMC_BplUpdateJackpotPool":        12,
	"HMC_BplInsertJackpotRecord":      13,
	"HMC_AddArenaAwardGoldPoolNotify": 14,
	"HMC_Ping":                        15,
	"HMC_ShutdownService":             16,
	"HMC_TransferToCelint":            17,
	"HMC_TurntableRecord":             18,
}

func (x HallMsgCode) Enum() *HallMsgCode {
	p := new(HallMsgCode)
	*p = x
	return p
}
func (x HallMsgCode) String() string {
	return proto.EnumName(HallMsgCode_name, int32(x))
}
func (x *HallMsgCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HallMsgCode_value, data, "HallMsgCode")
	if err != nil {
		return err
	}
	*x = HallMsgCode(value)
	return nil
}
func (HallMsgCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type HallMsgErrorCode int32

const (
	HallMsgErrorCode_HMEC_Invalid           HallMsgErrorCode = 0
	HallMsgErrorCode_HMEC_Param             HallMsgErrorCode = 1
	HallMsgErrorCode_HMEC_Register          HallMsgErrorCode = 2
	HallMsgErrorCode_HMEC_Sucess            HallMsgErrorCode = 3
	HallMsgErrorCode_HMEC_PlayerNotExist    HallMsgErrorCode = 4
	HallMsgErrorCode_HMEC_DeserializeFailed HallMsgErrorCode = 5
	HallMsgErrorCode_HMEC_FreshUserMoney    HallMsgErrorCode = 6
	HallMsgErrorCode_HMEC_SystemError       HallMsgErrorCode = 7
)

var HallMsgErrorCode_name = map[int32]string{
	0: "HMEC_Invalid",
	1: "HMEC_Param",
	2: "HMEC_Register",
	3: "HMEC_Sucess",
	4: "HMEC_PlayerNotExist",
	5: "HMEC_DeserializeFailed",
	6: "HMEC_FreshUserMoney",
	7: "HMEC_SystemError",
}
var HallMsgErrorCode_value = map[string]int32{
	"HMEC_Invalid":           0,
	"HMEC_Param":             1,
	"HMEC_Register":          2,
	"HMEC_Sucess":            3,
	"HMEC_PlayerNotExist":    4,
	"HMEC_DeserializeFailed": 5,
	"HMEC_FreshUserMoney":    6,
	"HMEC_SystemError":       7,
}

func (x HallMsgErrorCode) Enum() *HallMsgErrorCode {
	p := new(HallMsgErrorCode)
	*p = x
	return p
}
func (x HallMsgErrorCode) String() string {
	return proto.EnumName(HallMsgErrorCode_name, int32(x))
}
func (x *HallMsgErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HallMsgErrorCode_value, data, "HallMsgErrorCode")
	if err != nil {
		return err
	}
	*x = HallMsgErrorCode(value)
	return nil
}
func (HallMsgErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ShutdownService struct {
	GameID           *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	ArenaID          *int32 `protobuf:"varint,2,req,name=ArenaID" json:"ArenaID,omitempty"`
	ServerID         *int32 `protobuf:"varint,3,req,name=ServerID" json:"ServerID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ShutdownService) Reset()                    { *m = ShutdownService{} }
func (m *ShutdownService) String() string            { return proto.CompactTextString(m) }
func (*ShutdownService) ProtoMessage()               {}
func (*ShutdownService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ShutdownService) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *ShutdownService) GetArenaID() int32 {
	if m != nil && m.ArenaID != nil {
		return *m.ArenaID
	}
	return 0
}

func (m *ShutdownService) GetServerID() int32 {
	if m != nil && m.ServerID != nil {
		return *m.ServerID
	}
	return 0
}

type Ping struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Ping) Reset()                    { *m = Ping{} }
func (m *Ping) String() string            { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()               {}
func (*Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type FreshMoney struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=PlayerId" json:"PlayerId,omitempty"`
	Fee              *int32 `protobuf:"varint,2,req,name=Fee" json:"Fee,omitempty"`
	GameID           *int32 `protobuf:"varint,3,req,name=GameID" json:"GameID,omitempty"`
	CYMoney          *int32 `protobuf:"varint,4,req,name=CYMoney" json:"CYMoney,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FreshMoney) Reset()                    { *m = FreshMoney{} }
func (m *FreshMoney) String() string            { return proto.CompactTextString(m) }
func (*FreshMoney) ProtoMessage()               {}
func (*FreshMoney) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FreshMoney) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *FreshMoney) GetFee() int32 {
	if m != nil && m.Fee != nil {
		return *m.Fee
	}
	return 0
}

func (m *FreshMoney) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *FreshMoney) GetCYMoney() int32 {
	if m != nil && m.CYMoney != nil {
		return *m.CYMoney
	}
	return 0
}

type BplUpdateJackpotPool struct {
	ArenaID          *int32 `protobuf:"varint,1,req,name=ArenaID" json:"ArenaID,omitempty"`
	JType            *int32 `protobuf:"varint,2,req,name=JType" json:"JType,omitempty"`
	Detal            *int64 `protobuf:"varint,3,req,name=Detal" json:"Detal,omitempty"`
	SumDetal         *int64 `protobuf:"varint,4,req,name=SumDetal" json:"SumDetal,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BplUpdateJackpotPool) Reset()                    { *m = BplUpdateJackpotPool{} }
func (m *BplUpdateJackpotPool) String() string            { return proto.CompactTextString(m) }
func (*BplUpdateJackpotPool) ProtoMessage()               {}
func (*BplUpdateJackpotPool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BplUpdateJackpotPool) GetArenaID() int32 {
	if m != nil && m.ArenaID != nil {
		return *m.ArenaID
	}
	return 0
}

func (m *BplUpdateJackpotPool) GetJType() int32 {
	if m != nil && m.JType != nil {
		return *m.JType
	}
	return 0
}

func (m *BplUpdateJackpotPool) GetDetal() int64 {
	if m != nil && m.Detal != nil {
		return *m.Detal
	}
	return 0
}

func (m *BplUpdateJackpotPool) GetSumDetal() int64 {
	if m != nil && m.SumDetal != nil {
		return *m.SumDetal
	}
	return 0
}

type BplInsertJackpotRecord struct {
	PlayerID         *int64  `protobuf:"varint,1,req,name=PlayerID" json:"PlayerID,omitempty"`
	PlayerName       *string `protobuf:"bytes,2,req,name=PlayerName" json:"PlayerName,omitempty"`
	Type             *int32  `protobuf:"varint,3,req,name=Type" json:"Type,omitempty"`
	ArenaID          *int32  `protobuf:"varint,4,req,name=ArenaID" json:"ArenaID,omitempty"`
	Robot            *int32  `protobuf:"varint,5,req,name=Robot" json:"Robot,omitempty"`
	Value            *int64  `protobuf:"varint,6,req,name=Value" json:"Value,omitempty"`
	Time             *int64  `protobuf:"varint,7,req,name=Time" json:"Time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BplInsertJackpotRecord) Reset()                    { *m = BplInsertJackpotRecord{} }
func (m *BplInsertJackpotRecord) String() string            { return proto.CompactTextString(m) }
func (*BplInsertJackpotRecord) ProtoMessage()               {}
func (*BplInsertJackpotRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BplInsertJackpotRecord) GetPlayerID() int64 {
	if m != nil && m.PlayerID != nil {
		return *m.PlayerID
	}
	return 0
}

func (m *BplInsertJackpotRecord) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *BplInsertJackpotRecord) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *BplInsertJackpotRecord) GetArenaID() int32 {
	if m != nil && m.ArenaID != nil {
		return *m.ArenaID
	}
	return 0
}

func (m *BplInsertJackpotRecord) GetRobot() int32 {
	if m != nil && m.Robot != nil {
		return *m.Robot
	}
	return 0
}

func (m *BplInsertJackpotRecord) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *BplInsertJackpotRecord) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type Chat struct {
	SectionWords     *string `protobuf:"bytes,1,req,name=SectionWords" json:"SectionWords,omitempty"`
	FilterWords      *string `protobuf:"bytes,2,req,name=FilterWords" json:"FilterWords,omitempty"`
	GameID           *int32  `protobuf:"varint,3,req,name=GameID" json:"GameID,omitempty"`
	ContentType      *int32  `protobuf:"varint,4,req,name=ContentType" json:"ContentType,omitempty"`
	Delaysec         *int32  `protobuf:"varint,5,req,name=Delaysec" json:"Delaysec,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Chat) Reset()                    { *m = Chat{} }
func (m *Chat) String() string            { return proto.CompactTextString(m) }
func (*Chat) ProtoMessage()               {}
func (*Chat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Chat) GetSectionWords() string {
	if m != nil && m.SectionWords != nil {
		return *m.SectionWords
	}
	return ""
}

func (m *Chat) GetFilterWords() string {
	if m != nil && m.FilterWords != nil {
		return *m.FilterWords
	}
	return ""
}

func (m *Chat) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *Chat) GetContentType() int32 {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return 0
}

func (m *Chat) GetDelaysec() int32 {
	if m != nil && m.Delaysec != nil {
		return *m.Delaysec
	}
	return 0
}

// 消息协议
type Message struct {
	// 玩家ID
	PlayerId *int64 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	// 操作码
	Ops *int32 `protobuf:"varint,2,req,name=Ops" json:"Ops,omitempty"`
	// 数据
	Data             []byte `protobuf:"bytes,3,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Message) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *Message) GetOps() int32 {
	if m != nil && m.Ops != nil {
		return *m.Ops
	}
	return 0
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Http响应结果篡改
type HttpResult struct {
	En               *int32 `protobuf:"varint,1,req,name=En" json:"En,omitempty"`
	Data             []byte `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *HttpResult) Reset()                    { *m = HttpResult{} }
func (m *HttpResult) String() string            { return proto.CompactTextString(m) }
func (*HttpResult) ProtoMessage()               {}
func (*HttpResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *HttpResult) GetEn() int32 {
	if m != nil && m.En != nil {
		return *m.En
	}
	return 0
}

func (m *HttpResult) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 消息协议
type RpcMessage struct {
	// guid
	Id *string `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	// chan
	RespChan *string `protobuf:"bytes,2,req,name=RespChan" json:"RespChan,omitempty"`
	// 操作码
	Ops *int32 `protobuf:"varint,3,req,name=Ops" json:"Ops,omitempty"`
	// 玩家ID
	PlayerId *int64 `protobuf:"varint,4,opt,name=PlayerId" json:"PlayerId,omitempty"`
	// 数据
	Data             []byte `protobuf:"bytes,5,opt,name=Data" json:"Data,omitempty"`
	Size             *int32 `protobuf:"varint,6,opt,name=Size" json:"Size,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RpcMessage) Reset()                    { *m = RpcMessage{} }
func (m *RpcMessage) String() string            { return proto.CompactTextString(m) }
func (*RpcMessage) ProtoMessage()               {}
func (*RpcMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RpcMessage) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *RpcMessage) GetRespChan() string {
	if m != nil && m.RespChan != nil {
		return *m.RespChan
	}
	return ""
}

func (m *RpcMessage) GetOps() int32 {
	if m != nil && m.Ops != nil {
		return *m.Ops
	}
	return 0
}

func (m *RpcMessage) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *RpcMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RpcMessage) GetSize() int32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

type RpcResp struct {
	// guid
	Id *string `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	// en
	En *int32 `protobuf:"varint,2,req,name=En" json:"En,omitempty"`
	// 数据
	Data             []byte `protobuf:"bytes,3,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RpcResp) Reset()                    { *m = RpcResp{} }
func (m *RpcResp) String() string            { return proto.CompactTextString(m) }
func (*RpcResp) ProtoMessage()               {}
func (*RpcResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RpcResp) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *RpcResp) GetEn() int32 {
	if m != nil && m.En != nil {
		return *m.En
	}
	return 0
}

func (m *RpcResp) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ServerInfo struct {
	GameID           *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	ArenaID          *int32  `protobuf:"varint,2,req,name=ArenaID" json:"ArenaID,omitempty"`
	ServerID         *int32  `protobuf:"varint,3,req,name=ServerID" json:"ServerID,omitempty"`
	IP               *string `protobuf:"bytes,4,req,name=IP" json:"IP,omitempty"`
	Port             *int32  `protobuf:"varint,5,req,name=Port" json:"Port,omitempty"`
	PlayerNum        *int32  `protobuf:"varint,6,req,name=PlayerNum" json:"PlayerNum,omitempty"`
	Url              *string `protobuf:"bytes,7,req,name=Url" json:"Url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ServerInfo) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *ServerInfo) GetArenaID() int32 {
	if m != nil && m.ArenaID != nil {
		return *m.ArenaID
	}
	return 0
}

func (m *ServerInfo) GetServerID() int32 {
	if m != nil && m.ServerID != nil {
		return *m.ServerID
	}
	return 0
}

func (m *ServerInfo) GetIP() string {
	if m != nil && m.IP != nil {
		return *m.IP
	}
	return ""
}

func (m *ServerInfo) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *ServerInfo) GetPlayerNum() int32 {
	if m != nil && m.PlayerNum != nil {
		return *m.PlayerNum
	}
	return 0
}

func (m *ServerInfo) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type ServerUpdate struct {
	Info             *ServerInfo `protobuf:"bytes,1,req,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ServerUpdate) Reset()                    { *m = ServerUpdate{} }
func (m *ServerUpdate) String() string            { return proto.CompactTextString(m) }
func (*ServerUpdate) ProtoMessage()               {}
func (*ServerUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ServerUpdate) GetInfo() *ServerInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type Mail struct {
	GameID           *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	MailID           *int32 `protobuf:"varint,2,req,name=MailID" json:"MailID,omitempty"`
	PlayerID         *int32 `protobuf:"varint,3,req,name=PlayerID" json:"PlayerID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Mail) Reset()                    { *m = Mail{} }
func (m *Mail) String() string            { return proto.CompactTextString(m) }
func (*Mail) ProtoMessage()               {}
func (*Mail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Mail) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *Mail) GetMailID() int32 {
	if m != nil && m.MailID != nil {
		return *m.MailID
	}
	return 0
}

func (m *Mail) GetPlayerID() int32 {
	if m != nil && m.PlayerID != nil {
		return *m.PlayerID
	}
	return 0
}

type AwardGoldUpdateRep struct {
	GameID           *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	ArenaID          *int32  `protobuf:"varint,2,req,name=ArenaID" json:"ArenaID,omitempty"`
	GoldType         *int32  `protobuf:"varint,3,req,name=GoldType" json:"GoldType,omitempty"`
	DetalCache       []int64 `protobuf:"varint,4,rep,name=DetalCache" json:"DetalCache,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AwardGoldUpdateRep) Reset()                    { *m = AwardGoldUpdateRep{} }
func (m *AwardGoldUpdateRep) String() string            { return proto.CompactTextString(m) }
func (*AwardGoldUpdateRep) ProtoMessage()               {}
func (*AwardGoldUpdateRep) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AwardGoldUpdateRep) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *AwardGoldUpdateRep) GetArenaID() int32 {
	if m != nil && m.ArenaID != nil {
		return *m.ArenaID
	}
	return 0
}

func (m *AwardGoldUpdateRep) GetGoldType() int32 {
	if m != nil && m.GoldType != nil {
		return *m.GoldType
	}
	return 0
}

func (m *AwardGoldUpdateRep) GetDetalCache() []int64 {
	if m != nil {
		return m.DetalCache
	}
	return nil
}

type AwardGoldUpdateRsp struct {
	GameID           *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	ArenaID          *int32  `protobuf:"varint,2,req,name=ArenaID" json:"ArenaID,omitempty"`
	GoldType         *int32  `protobuf:"varint,3,req,name=GoldType" json:"GoldType,omitempty"`
	DetalCache       []int64 `protobuf:"varint,4,rep,name=DetalCache" json:"DetalCache,omitempty"`
	SumDetalCache    []int64 `protobuf:"varint,5,rep,name=SumDetalCache" json:"SumDetalCache,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AwardGoldUpdateRsp) Reset()                    { *m = AwardGoldUpdateRsp{} }
func (m *AwardGoldUpdateRsp) String() string            { return proto.CompactTextString(m) }
func (*AwardGoldUpdateRsp) ProtoMessage()               {}
func (*AwardGoldUpdateRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AwardGoldUpdateRsp) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *AwardGoldUpdateRsp) GetArenaID() int32 {
	if m != nil && m.ArenaID != nil {
		return *m.ArenaID
	}
	return 0
}

func (m *AwardGoldUpdateRsp) GetGoldType() int32 {
	if m != nil && m.GoldType != nil {
		return *m.GoldType
	}
	return 0
}

func (m *AwardGoldUpdateRsp) GetDetalCache() []int64 {
	if m != nil {
		return m.DetalCache
	}
	return nil
}

func (m *AwardGoldUpdateRsp) GetSumDetalCache() []int64 {
	if m != nil {
		return m.SumDetalCache
	}
	return nil
}

type TriggerArenaAwardGold struct {
	PlayerID         *int32  `protobuf:"varint,1,req,name=PlayerID" json:"PlayerID,omitempty"`
	GoldValue        *int32  `protobuf:"varint,2,req,name=GoldValue" json:"GoldValue,omitempty"`
	Type             *int32  `protobuf:"varint,3,req,name=Type" json:"Type,omitempty"`
	PlayerName       *string `protobuf:"bytes,4,req,name=PlayerName" json:"PlayerName,omitempty"`
	Count            *int32  `protobuf:"varint,5,req,name=Count" json:"Count,omitempty"`
	ArenaID          *int32  `protobuf:"varint,6,req,name=ArenaID" json:"ArenaID,omitempty"`
	GameID           *int32  `protobuf:"varint,7,req,name=GameID" json:"GameID,omitempty"`
	Code             *int32  `protobuf:"varint,8,req,name=Code" json:"Code,omitempty"`
	GoldBase         *int32  `protobuf:"varint,9,req,name=GoldBase" json:"GoldBase,omitempty"`
	RoomID           *int32  `protobuf:"varint,10,req,name=RoomID" json:"RoomID,omitempty"`
	GoldType         *int32  `protobuf:"varint,11,req,name=GoldType" json:"GoldType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TriggerArenaAwardGold) Reset()                    { *m = TriggerArenaAwardGold{} }
func (m *TriggerArenaAwardGold) String() string            { return proto.CompactTextString(m) }
func (*TriggerArenaAwardGold) ProtoMessage()               {}
func (*TriggerArenaAwardGold) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *TriggerArenaAwardGold) GetPlayerID() int32 {
	if m != nil && m.PlayerID != nil {
		return *m.PlayerID
	}
	return 0
}

func (m *TriggerArenaAwardGold) GetGoldValue() int32 {
	if m != nil && m.GoldValue != nil {
		return *m.GoldValue
	}
	return 0
}

func (m *TriggerArenaAwardGold) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *TriggerArenaAwardGold) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *TriggerArenaAwardGold) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *TriggerArenaAwardGold) GetArenaID() int32 {
	if m != nil && m.ArenaID != nil {
		return *m.ArenaID
	}
	return 0
}

func (m *TriggerArenaAwardGold) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *TriggerArenaAwardGold) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *TriggerArenaAwardGold) GetGoldBase() int32 {
	if m != nil && m.GoldBase != nil {
		return *m.GoldBase
	}
	return 0
}

func (m *TriggerArenaAwardGold) GetRoomID() int32 {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return 0
}

func (m *TriggerArenaAwardGold) GetGoldType() int32 {
	if m != nil && m.GoldType != nil {
		return *m.GoldType
	}
	return 0
}

type TriggerArenaAwardGoldRep struct {
	Info             *TriggerArenaAwardGold `protobuf:"bytes,1,req,name=Info" json:"Info,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *TriggerArenaAwardGoldRep) Reset()                    { *m = TriggerArenaAwardGoldRep{} }
func (m *TriggerArenaAwardGoldRep) String() string            { return proto.CompactTextString(m) }
func (*TriggerArenaAwardGoldRep) ProtoMessage()               {}
func (*TriggerArenaAwardGoldRep) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *TriggerArenaAwardGoldRep) GetInfo() *TriggerArenaAwardGold {
	if m != nil {
		return m.Info
	}
	return nil
}

type TriggerArenaAwardGoldRsp struct {
	Info             *TriggerArenaAwardGold `protobuf:"bytes,1,req,name=Info" json:"Info,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *TriggerArenaAwardGoldRsp) Reset()                    { *m = TriggerArenaAwardGoldRsp{} }
func (m *TriggerArenaAwardGoldRsp) String() string            { return proto.CompactTextString(m) }
func (*TriggerArenaAwardGoldRsp) ProtoMessage()               {}
func (*TriggerArenaAwardGoldRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *TriggerArenaAwardGoldRsp) GetInfo() *TriggerArenaAwardGold {
	if m != nil {
		return m.Info
	}
	return nil
}

type AwardGoldPoolTriggerLog struct {
	PlayerID         *int32  `protobuf:"varint,1,req,name=PlayerID" json:"PlayerID,omitempty"`
	GoldValue        *int32  `protobuf:"varint,2,req,name=GoldValue" json:"GoldValue,omitempty"`
	Type             *int32  `protobuf:"varint,3,req,name=Type" json:"Type,omitempty"`
	GameID           *int32  `protobuf:"varint,4,req,name=GameID" json:"GameID,omitempty"`
	PlayerName       *string `protobuf:"bytes,5,req,name=PlayerName" json:"PlayerName,omitempty"`
	GoldType         *int32  `protobuf:"varint,6,req,name=GoldType" json:"GoldType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AwardGoldPoolTriggerLog) Reset()                    { *m = AwardGoldPoolTriggerLog{} }
func (m *AwardGoldPoolTriggerLog) String() string            { return proto.CompactTextString(m) }
func (*AwardGoldPoolTriggerLog) ProtoMessage()               {}
func (*AwardGoldPoolTriggerLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *AwardGoldPoolTriggerLog) GetPlayerID() int32 {
	if m != nil && m.PlayerID != nil {
		return *m.PlayerID
	}
	return 0
}

func (m *AwardGoldPoolTriggerLog) GetGoldValue() int32 {
	if m != nil && m.GoldValue != nil {
		return *m.GoldValue
	}
	return 0
}

func (m *AwardGoldPoolTriggerLog) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *AwardGoldPoolTriggerLog) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *AwardGoldPoolTriggerLog) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *AwardGoldPoolTriggerLog) GetGoldType() int32 {
	if m != nil && m.GoldType != nil {
		return *m.GoldType
	}
	return 0
}

type AddArenaAwardGoldPoolNotify struct {
	ArenaID          *int32 `protobuf:"varint,1,req,name=ArenaID" json:"ArenaID,omitempty"`
	GameID           *int32 `protobuf:"varint,2,req,name=GameID" json:"GameID,omitempty"`
	GoldType         *int32 `protobuf:"varint,3,req,name=GoldType" json:"GoldType,omitempty"`
	Type             *int32 `protobuf:"varint,4,req,name=Type" json:"Type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AddArenaAwardGoldPoolNotify) Reset()                    { *m = AddArenaAwardGoldPoolNotify{} }
func (m *AddArenaAwardGoldPoolNotify) String() string            { return proto.CompactTextString(m) }
func (*AddArenaAwardGoldPoolNotify) ProtoMessage()               {}
func (*AddArenaAwardGoldPoolNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *AddArenaAwardGoldPoolNotify) GetArenaID() int32 {
	if m != nil && m.ArenaID != nil {
		return *m.ArenaID
	}
	return 0
}

func (m *AddArenaAwardGoldPoolNotify) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *AddArenaAwardGoldPoolNotify) GetGoldType() int32 {
	if m != nil && m.GoldType != nil {
		return *m.GoldType
	}
	return 0
}

func (m *AddArenaAwardGoldPoolNotify) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type TransferToCelint struct {
	MsgID            *int32 `protobuf:"varint,1,req,name=MsgID" json:"MsgID,omitempty"`
	Data             []byte `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
	Size             *int32 `protobuf:"varint,3,opt,name=Size" json:"Size,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TransferToCelint) Reset()                    { *m = TransferToCelint{} }
func (m *TransferToCelint) String() string            { return proto.CompactTextString(m) }
func (*TransferToCelint) ProtoMessage()               {}
func (*TransferToCelint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *TransferToCelint) GetMsgID() int32 {
	if m != nil && m.MsgID != nil {
		return *m.MsgID
	}
	return 0
}

func (m *TransferToCelint) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TransferToCelint) GetSize() int32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

// TurntableRecord
type TurntableRecordRsq struct {
	PlayerID         *int32 `protobuf:"varint,1,req,name=PlayerID" json:"PlayerID,omitempty"`
	Kind             *int32 `protobuf:"varint,2,req,name=Kind" json:"Kind,omitempty"`
	ID               *int32 `protobuf:"varint,3,req,name=ID" json:"ID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TurntableRecordRsq) Reset()                    { *m = TurntableRecordRsq{} }
func (m *TurntableRecordRsq) String() string            { return proto.CompactTextString(m) }
func (*TurntableRecordRsq) ProtoMessage()               {}
func (*TurntableRecordRsq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *TurntableRecordRsq) GetPlayerID() int32 {
	if m != nil && m.PlayerID != nil {
		return *m.PlayerID
	}
	return 0
}

func (m *TurntableRecordRsq) GetKind() int32 {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return 0
}

func (m *TurntableRecordRsq) GetID() int32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func init() {
	proto.RegisterType((*ShutdownService)(nil), "HallProto.ShutdownService")
	proto.RegisterType((*Ping)(nil), "HallProto.Ping")
	proto.RegisterType((*FreshMoney)(nil), "HallProto.FreshMoney")
	proto.RegisterType((*BplUpdateJackpotPool)(nil), "HallProto.BplUpdateJackpotPool")
	proto.RegisterType((*BplInsertJackpotRecord)(nil), "HallProto.BplInsertJackpotRecord")
	proto.RegisterType((*Chat)(nil), "HallProto.Chat")
	proto.RegisterType((*Message)(nil), "HallProto.Message")
	proto.RegisterType((*HttpResult)(nil), "HallProto.HttpResult")
	proto.RegisterType((*RpcMessage)(nil), "HallProto.RpcMessage")
	proto.RegisterType((*RpcResp)(nil), "HallProto.RpcResp")
	proto.RegisterType((*ServerInfo)(nil), "HallProto.ServerInfo")
	proto.RegisterType((*ServerUpdate)(nil), "HallProto.ServerUpdate")
	proto.RegisterType((*Mail)(nil), "HallProto.Mail")
	proto.RegisterType((*AwardGoldUpdateRep)(nil), "HallProto.AwardGoldUpdateRep")
	proto.RegisterType((*AwardGoldUpdateRsp)(nil), "HallProto.AwardGoldUpdateRsp")
	proto.RegisterType((*TriggerArenaAwardGold)(nil), "HallProto.TriggerArenaAwardGold")
	proto.RegisterType((*TriggerArenaAwardGoldRep)(nil), "HallProto.TriggerArenaAwardGoldRep")
	proto.RegisterType((*TriggerArenaAwardGoldRsp)(nil), "HallProto.TriggerArenaAwardGoldRsp")
	proto.RegisterType((*AwardGoldPoolTriggerLog)(nil), "HallProto.AwardGoldPoolTriggerLog")
	proto.RegisterType((*AddArenaAwardGoldPoolNotify)(nil), "HallProto.AddArenaAwardGoldPoolNotify")
	proto.RegisterType((*TransferToCelint)(nil), "HallProto.TransferToCelint")
	proto.RegisterType((*TurntableRecordRsq)(nil), "HallProto.TurntableRecordRsq")
	proto.RegisterEnum("HallProto.HallMsgCode", HallMsgCode_name, HallMsgCode_value)
	proto.RegisterEnum("HallProto.HallMsgErrorCode", HallMsgErrorCode_name, HallMsgErrorCode_value)
}

func init() { proto.RegisterFile("Hall.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x4f, 0x73, 0x1b, 0x35,
	0x14, 0x67, 0xff, 0xd8, 0x8e, 0x9f, 0xd3, 0x44, 0x55, 0xd3, 0x74, 0x69, 0x4b, 0x9b, 0x59, 0x38,
	0x94, 0x1e, 0x32, 0x0c, 0xc3, 0x85, 0x03, 0x87, 0xc4, 0x76, 0x1a, 0xb7, 0xb8, 0xf5, 0x6c, 0x1c,
	0x18, 0x4e, 0x19, 0xc5, 0xab, 0xd8, 0x3b, 0xac, 0x57, 0x8b, 0x24, 0xb7, 0x75, 0x2f, 0x0c, 0x7c,
	0x00, 0x3e, 0x04, 0x27, 0x4e, 0xcc, 0x70, 0x86, 0x13, 0x9f, 0x8c, 0x91, 0xb4, 0x7f, 0x6d, 0x27,
	0x87, 0x4e, 0x87, 0xdb, 0x7b, 0x6f, 0x25, 0xbd, 0xdf, 0xef, 0xf7, 0x9e, 0xde, 0x0a, 0xe0, 0x94,
	0xc4, 0xf1, 0x61, 0xca, 0x99, 0x64, 0xb8, 0xad, 0xec, 0x91, 0x32, 0xfd, 0x0b, 0xd8, 0x3d, 0x9b,
	0x2d, 0x64, 0xc8, 0xde, 0x24, 0x67, 0x94, 0xbf, 0x8e, 0x26, 0x14, 0xef, 0x43, 0xf3, 0x19, 0x99,
	0xd3, 0x41, 0xcf, 0xb3, 0x0e, 0xec, 0x27, 0x8d, 0x20, 0xf3, 0xb0, 0x07, 0xad, 0x23, 0x4e, 0x13,
	0x32, 0xe8, 0x79, 0xb6, 0xfe, 0x90, 0xbb, 0xf8, 0x3e, 0x6c, 0xa9, 0xcd, 0x94, 0x0f, 0x7a, 0x9e,
	0xa3, 0x3f, 0x15, 0xbe, 0xdf, 0x04, 0x77, 0x14, 0x25, 0x53, 0x3f, 0x06, 0x38, 0xe1, 0x54, 0xcc,
	0x86, 0x2c, 0xa1, 0x4b, 0xb5, 0x63, 0x14, 0x93, 0x25, 0xe5, 0x83, 0x50, 0x67, 0x71, 0x82, 0xc2,
	0xc7, 0x08, 0x9c, 0x13, 0x4a, 0xb3, 0x1c, 0xca, 0xac, 0x20, 0x72, 0x56, 0x11, 0x75, 0x7f, 0xd0,
	0x07, 0x7a, 0xae, 0x41, 0x94, 0xb9, 0xfe, 0x5b, 0xd8, 0x3b, 0x4e, 0xe3, 0xf3, 0x34, 0x24, 0x92,
	0x3e, 0x27, 0x93, 0x1f, 0x53, 0x26, 0x47, 0x8c, 0xc5, 0x55, 0x0e, 0x56, 0x9d, 0xc3, 0x1e, 0x34,
	0x9e, 0x8f, 0x97, 0x69, 0x9e, 0xd7, 0x38, 0x2a, 0xda, 0xa3, 0x92, 0xc4, 0x3a, 0xb1, 0x13, 0x18,
	0x47, 0xf3, 0x5d, 0xcc, 0xcd, 0x07, 0xd7, 0xa0, 0xcf, 0x7d, 0xff, 0x5f, 0x0b, 0xf6, 0x8f, 0xd3,
	0x78, 0x90, 0x08, 0xca, 0x65, 0x96, 0x3a, 0xa0, 0x13, 0xc6, 0xc3, 0x0a, 0xe9, 0xde, 0x0a, 0xe9,
	0x1e, 0x7e, 0x04, 0x60, 0xec, 0x97, 0x64, 0x6e, 0x30, 0xb4, 0x83, 0x4a, 0x04, 0x63, 0x70, 0x35,
	0x3a, 0x23, 0x80, 0xb6, 0xab, 0x64, 0xdc, 0x35, 0x32, 0x01, 0xbb, 0x64, 0xd2, 0x6b, 0x18, 0x32,
	0xda, 0x51, 0xd1, 0xef, 0x48, 0xbc, 0xa0, 0x5e, 0xd3, 0x90, 0xd1, 0x8e, 0x3e, 0x39, 0x9a, 0x53,
	0xaf, 0xa5, 0x83, 0xda, 0xf6, 0x7f, 0xb7, 0xc0, 0xed, 0xce, 0x88, 0xc4, 0x3e, 0x6c, 0x9f, 0xd1,
	0x89, 0x8c, 0x58, 0xf2, 0x3d, 0xe3, 0xa1, 0xd0, 0xb0, 0xdb, 0x41, 0x2d, 0x86, 0x0f, 0xa0, 0x73,
	0x12, 0xc5, 0x92, 0x72, 0xb3, 0xc4, 0x60, 0xaf, 0x86, 0xae, 0xad, 0xdf, 0x01, 0x74, 0xba, 0x2c,
	0x91, 0x34, 0x91, 0x9a, 0x9b, 0x21, 0x51, 0x0d, 0x29, 0xc9, 0x7a, 0x34, 0x26, 0x4b, 0x41, 0x27,
	0x19, 0x97, 0xc2, 0xf7, 0x5f, 0x40, 0x6b, 0x48, 0x85, 0x20, 0x53, 0xba, 0xd2, 0x4e, 0xd6, 0x6a,
	0x3b, 0xbd, 0x4a, 0x45, 0xde, 0x4e, 0xaf, 0x52, 0xa1, 0x18, 0xf7, 0x88, 0x24, 0x9e, 0x73, 0x60,
	0x3d, 0xd9, 0x0e, 0xb4, 0xed, 0x7f, 0x01, 0x70, 0x2a, 0x65, 0x1a, 0x50, 0xb1, 0x88, 0x25, 0xde,
	0x01, 0xbb, 0x9f, 0x64, 0x1d, 0x62, 0xf7, 0x93, 0x62, 0x87, 0x5d, 0xd9, 0xf1, 0x9b, 0x05, 0x10,
	0xa4, 0x93, 0x1c, 0xc2, 0x0e, 0xd8, 0x59, 0x2f, 0xb7, 0x03, 0x7b, 0xa0, 0x8b, 0x1d, 0x50, 0x91,
	0x76, 0x67, 0x24, 0xc9, 0x24, 0x29, 0xfc, 0x1c, 0x92, 0x53, 0x42, 0xaa, 0x12, 0x70, 0x57, 0x08,
	0xe4, 0xc9, 0x1b, 0x65, 0x72, 0x15, 0x3b, 0x8b, 0xde, 0xa9, 0x4a, 0x5a, 0xaa, 0x1d, 0x94, 0xed,
	0x7f, 0x03, 0xad, 0x20, 0x9d, 0xa8, 0x24, 0x6b, 0x60, 0x0c, 0x1f, 0x7b, 0x8d, 0x4f, 0x55, 0x81,
	0x3f, 0x2d, 0x80, 0xec, 0xd6, 0x26, 0x57, 0xec, 0xc3, 0x4e, 0x01, 0x0d, 0x68, 0xa4, 0x0b, 0xac,
	0x00, 0x8d, 0x14, 0x80, 0x11, 0xe3, 0x79, 0x7f, 0x6a, 0x1b, 0x3f, 0x84, 0x76, 0xd6, 0xf0, 0x8b,
	0xb9, 0x6e, 0xd1, 0x46, 0x50, 0x06, 0x94, 0x66, 0xe7, 0x3c, 0xd6, 0x5d, 0xda, 0x0e, 0x94, 0xe9,
	0x7f, 0xad, 0x7a, 0x53, 0x9d, 0x6f, 0xae, 0x39, 0xfe, 0x1c, 0xdc, 0x28, 0xb9, 0x62, 0x1a, 0x6f,
	0xe7, 0xcb, 0xbb, 0x87, 0xc5, 0x90, 0x3b, 0x2c, 0x69, 0x05, 0x7a, 0x89, 0x1f, 0x80, 0x3b, 0x24,
	0x51, 0x7c, 0x2d, 0xc9, 0x7d, 0x68, 0xaa, 0xef, 0x05, 0xc7, 0xcc, 0xab, 0xdd, 0xe0, 0x8c, 0x62,
	0xee, 0xfb, 0xbf, 0x5a, 0x80, 0x8f, 0xde, 0x10, 0x1e, 0x3e, 0x63, 0x71, 0x68, 0x20, 0x05, 0x34,
	0x7d, 0x3f, 0x1d, 0xd5, 0x11, 0x95, 0xeb, 0x5e, 0xf8, 0x6a, 0x4c, 0xe8, 0x31, 0xd3, 0x25, 0x93,
	0x99, 0xba, 0x30, 0xce, 0x13, 0x27, 0xa8, 0x44, 0xfc, 0x3f, 0x36, 0x80, 0x10, 0xff, 0x33, 0x08,
	0xfc, 0x19, 0xdc, 0xca, 0xc7, 0xa1, 0x59, 0xd2, 0xd0, 0x4b, 0xea, 0x41, 0xff, 0x2f, 0x1b, 0xee,
	0x8e, 0x79, 0x34, 0x9d, 0x52, 0xae, 0x93, 0x16, 0xb0, 0xd7, 0xe6, 0x64, 0x45, 0x65, 0xd5, 0x24,
	0x6a, 0x8d, 0x99, 0x63, 0x06, 0x73, 0x19, 0xd8, 0x38, 0x25, 0xeb, 0x93, 0xd5, 0x5d, 0x9b, 0xac,
	0x7b, 0xd0, 0xe8, 0xb2, 0x45, 0x52, 0xcc, 0x4a, 0xed, 0x54, 0x95, 0x69, 0xd6, 0x95, 0x29, 0xb5,
	0x6c, 0xd5, 0xb4, 0xc4, 0xe0, 0x76, 0x59, 0x48, 0xbd, 0x2d, 0x93, 0x5b, 0xd9, 0xb9, 0x8a, 0xc7,
	0x44, 0x50, 0xaf, 0x5d, 0xaa, 0xa8, 0x7c, 0x75, 0x4e, 0xc0, 0xd8, 0x7c, 0xd0, 0xf3, 0xc0, 0x9c,
	0x63, 0xbc, 0x9a, 0xf2, 0x9d, 0xba, 0xf2, 0xfe, 0x08, 0xbc, 0x8d, 0x92, 0xa9, 0x46, 0xfb, 0x0a,
	0xdc, 0x41, 0xd9, 0xfe, 0x07, 0x95, 0xf6, 0xdf, 0xbc, 0x45, 0xaf, 0xbe, 0xfe, 0x44, 0xf1, 0xbe,
	0x27, 0xfe, 0x6d, 0xc1, 0xbd, 0x22, 0xa6, 0x7e, 0xba, 0xd9, 0xe2, 0x6f, 0xd9, 0xf4, 0x03, 0x57,
	0xb6, 0xac, 0x84, 0x5b, 0xab, 0x44, 0xbd, 0xe2, 0x8d, 0xb5, 0x8a, 0x57, 0x15, 0x6e, 0xae, 0x28,
	0xfc, 0x33, 0x3c, 0x38, 0x0a, 0xc3, 0x3a, 0x31, 0x45, 0xe2, 0x25, 0x93, 0xd1, 0xd5, 0xf2, 0x86,
	0xf7, 0x43, 0x09, 0xc6, 0xae, 0x81, 0xb9, 0xe9, 0x22, 0xe5, 0xa4, 0xdc, 0x92, 0x94, 0x3f, 0x02,
	0x34, 0xe6, 0x24, 0x11, 0x57, 0x94, 0x8f, 0x59, 0x97, 0xc6, 0x51, 0xa2, 0x7f, 0xdc, 0x43, 0x31,
	0x2d, 0x72, 0x1a, 0x67, 0xd3, 0x4f, 0xa9, 0xf8, 0x2f, 0x38, 0x95, 0xff, 0xc2, 0x18, 0xf0, 0x78,
	0xc1, 0x13, 0x49, 0x2e, 0x63, 0x6a, 0x5e, 0x22, 0x81, 0xf8, 0xe9, 0xc6, 0x52, 0x60, 0x70, 0x5f,
	0x44, 0x49, 0x98, 0x31, 0xd1, 0xb6, 0x9e, 0xe0, 0xf9, 0xd0, 0xb3, 0x07, 0xbd, 0xa7, 0xbf, 0x38,
	0xd0, 0x51, 0x0d, 0x31, 0x14, 0x53, 0xdd, 0xea, 0xbb, 0xd0, 0x39, 0x1d, 0x76, 0x2f, 0x06, 0xc9,
	0x6b, 0x12, 0x47, 0x21, 0xfa, 0x08, 0x6f, 0xc3, 0x96, 0x0a, 0x74, 0x4f, 0x89, 0x44, 0x16, 0xde,
	0x03, 0xa4, 0xbc, 0xea, 0xc0, 0x46, 0x36, 0xbe, 0x03, 0xbb, 0x2a, 0xaa, 0xa6, 0xeb, 0x68, 0x71,
	0x19, 0x47, 0x62, 0x86, 0x5a, 0xf8, 0x1e, 0xdc, 0x51, 0xc1, 0x95, 0x31, 0x86, 0xb6, 0xf0, 0x27,
	0xf0, 0xb1, 0xfa, 0xb0, 0xb1, 0xf9, 0x50, 0x1b, 0x3f, 0x86, 0x07, 0xb5, 0x7d, 0xf5, 0xde, 0x43,
	0x80, 0x31, 0xec, 0xa8, 0x05, 0xe5, 0x33, 0x14, 0x75, 0xf0, 0x43, 0xf0, 0x54, 0x6c, 0xd3, 0x63,
	0x11, 0x6d, 0xe3, 0x47, 0x70, 0x3f, 0xfb, 0xba, 0xe1, 0x3d, 0x87, 0x6e, 0xe1, 0x4f, 0xe1, 0xb1,
	0x4e, 0x79, 0x7d, 0xc7, 0xa0, 0x9d, 0x5c, 0x08, 0xf5, 0x0a, 0x46, 0xbb, 0x39, 0xbb, 0x95, 0x47,
	0x37, 0x42, 0xd8, 0x83, 0x3d, 0xc3, 0xae, 0x5e, 0x7c, 0x74, 0x3b, 0xdf, 0xb2, 0x52, 0x44, 0x84,
	0x9f, 0xfe, 0x63, 0x01, 0xca, 0x6a, 0xd0, 0xe7, 0x9c, 0x71, 0x5d, 0x08, 0x04, 0xdb, 0xa7, 0xc3,
	0x7e, 0xb5, 0x12, 0x3b, 0x00, 0x3a, 0x32, 0x22, 0x9c, 0xcc, 0x91, 0x85, 0x6f, 0xc3, 0x2d, 0xed,
	0x07, 0x74, 0x1a, 0x09, 0x49, 0x39, 0xb2, 0x4d, 0xf5, 0xfa, 0xdd, 0x8b, 0xb3, 0xc5, 0x84, 0x0a,
	0x81, 0x1c, 0x93, 0x53, 0xed, 0x31, 0xd7, 0x86, 0xc9, 0xfe, 0xdb, 0x48, 0x48, 0xe4, 0xe2, 0xfb,
	0xb0, 0xaf, 0x3f, 0xf4, 0xa8, 0xa0, 0x3c, 0x22, 0x71, 0xf4, 0x8e, 0x9e, 0x90, 0x28, 0xa6, 0x21,
	0x6a, 0x14, 0x9b, 0xb4, 0xc2, 0xe7, 0x82, 0x72, 0xa3, 0x72, 0xd3, 0x54, 0x5f, 0x1d, 0xbf, 0x14,
	0x92, 0xce, 0x35, 0x56, 0xd4, 0xfa, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xc1, 0xc4, 0x25, 0x69, 0x93,
	0x0c, 0x00, 0x00,
}
