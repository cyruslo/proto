// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

/*
Package api is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-gen-bm v0.1.

package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

It is generated from these files:
	api.proto
*/
package api

import (
	"context"

	bm "github.com/bilibili/kratos/pkg/net/http/blademaster"
	"github.com/bilibili/kratos/pkg/net/http/blademaster/binding"
)

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathHallcometPushMsg = "/hallcomet/PushMsg"
var PathHallcometBroadcast = "/hallcomet/Broadcast"

// HallcometBMServer is the server API for Hallcomet service.
type HallcometBMServer interface {
	// 推送消息到单人或多人
	PushMsg(ctx context.Context, req *PushMsgReq) (resp *PushMsgRsp, err error)

	// 广播到所有人
	Broadcast(ctx context.Context, req *BroadcastReq) (resp *BroadcastRsp, err error)
}

var HallcometSvc HallcometBMServer

func hallcometPushMsg(c *bm.Context) {
	p := new(PushMsgReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := HallcometSvc.PushMsg(c, p)
	c.JSON(resp, err)
}

func hallcometBroadcast(c *bm.Context) {
	p := new(BroadcastReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := HallcometSvc.Broadcast(c, p)
	c.JSON(resp, err)
}

// RegisterHallcometBMServer Register the blademaster route
func RegisterHallcometBMServer(e *bm.Engine, server HallcometBMServer) {
	HallcometSvc = server
	e.POST("/hallcomet/PushMsg", hallcometPushMsg)
	e.POST("/hallcomet/Broadcast", hallcometBroadcast)
}
