// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

/*
Package api is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-gen-bm v0.1.

package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

It is generated from these files:
	api.proto
*/
package api

import (
	"context"

	bm "github.com/bilibili/kratos/pkg/net/http/blademaster"
	"github.com/bilibili/kratos/pkg/net/http/blademaster/binding"
)
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathHallActivityOnUserLogin = "hallactivity/OnUserLogin"
var PathHallActivityOpenRedEnvelope = "hallactivity/OpenRedEnvelope"
var PathHallActivityShareAddCount = "hallactivity/ShareAddCount"
var PathHallActivityJabBubble = "hallactivity/JabBubble"
var PathHallActivityQueryGameActivityInfo = "hallactivity/QueryGameActivityInfo"
var PathHallActivityUpdateGameActivityInfo = "hallactivity/UpdateGameActivityInfo"

// HallActivityBMServer is the server API for HallActivity service.
// 大厅活动
type HallActivityBMServer interface {
	// 客户端登录后获取红包相关的数据
	OnUserLogin(ctx context.Context, req *UserLoginReq) (resp *google_protobuf1.Empty, err error)

	// 开红包
	OpenRedEnvelope(ctx context.Context, req *HallOpenRedEnvelopesReq) (resp *HallOpenRedEnvelopesRsp, err error)

	// 分享增加可抢红包的次数
	ShareAddCount(ctx context.Context, req *ShareAddCountReq) (resp *ShareData, err error)

	// 戳泡泡
	JabBubble(ctx context.Context, req *HallBubbleReq) (resp *HallBubbleResp, err error)

	// 查询体验场活动信息
	QueryGameActivityInfo(ctx context.Context, req *QueryGameActivityInfoReq) (resp *QueryGameActivityInfoRsp, err error)

	// 更新体验场活动次数信息
	UpdateGameActivityInfo(ctx context.Context, req *UpdateGameActivityInfoReq) (resp *google_protobuf1.Empty, err error)
}

var HallActivitySvc HallActivityBMServer

func hallActivityOnUserLogin(c *bm.Context) {
	p := new(UserLoginReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := HallActivitySvc.OnUserLogin(c, p)
	c.JSON(resp, err)
}

func hallActivityOpenRedEnvelope(c *bm.Context) {
	p := new(HallOpenRedEnvelopesReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := HallActivitySvc.OpenRedEnvelope(c, p)
	c.JSON(resp, err)
}

func hallActivityShareAddCount(c *bm.Context) {
	p := new(ShareAddCountReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := HallActivitySvc.ShareAddCount(c, p)
	c.JSON(resp, err)
}

func hallActivityJabBubble(c *bm.Context) {
	p := new(HallBubbleReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := HallActivitySvc.JabBubble(c, p)
	c.JSON(resp, err)
}

func hallActivityQueryGameActivityInfo(c *bm.Context) {
	p := new(QueryGameActivityInfoReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := HallActivitySvc.QueryGameActivityInfo(c, p)
	c.JSON(resp, err)
}

func hallActivityUpdateGameActivityInfo(c *bm.Context) {
	p := new(UpdateGameActivityInfoReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := HallActivitySvc.UpdateGameActivityInfo(c, p)
	c.JSON(resp, err)
}

// RegisterHallActivityBMServer Register the blademaster route
func RegisterHallActivityBMServer(e *bm.Engine, server HallActivityBMServer) {
	HallActivitySvc = server
	e.POST("hallactivity/OnUserLogin", hallActivityOnUserLogin)
	e.POST("hallactivity/OpenRedEnvelope", hallActivityOpenRedEnvelope)
	e.POST("hallactivity/ShareAddCount", hallActivityShareAddCount)
	e.POST("hallactivity/JabBubble", hallActivityJabBubble)
	e.POST("hallactivity/QueryGameActivityInfo", hallActivityQueryGameActivityInfo)
	e.POST("hallactivity/UpdateGameActivityInfo", hallActivityUpdateGameActivityInfo)
}
